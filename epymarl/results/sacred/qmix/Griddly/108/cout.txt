[INFO 16:33:29] pymarl Running command 'my_main'
[INFO 16:33:29] pymarl Started run with ID "108"
[DEBUG 16:33:29] pymarl Starting Heartbeat
[DEBUG 16:33:29] my_main Started
Seed: 8206
[WARNING 16:33:29] my_main CUDA flag use_cuda was switched OFF automatically because no CUDA devices are available!
[INFO 16:33:29] my_main Experiment Parameters:
[INFO 16:33:29] my_main 

{   'action_selector': 'epsilon_greedy',
    'add_value_last_step': True,
    'agent': 'rnn',
    'agent_output_type': 'q',
    'batch_size': 10,
    'batch_size_run': 1,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_type': 'ac_critic',
    'double_q': True,
    'entropy_coef': 0.01,
    'env': 'griddlygen',
    'env_args': {   'seed': 8206},
    'epochs': 4,
    'eps_clip': 0.2,
    'epsilon_anneal_time': 5000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'evaluation_epsilon': 0.0,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hidden_dim': 64,
    'hypergroup': None,
    'hypernet_embed': 64,
    'hypernet_layers': 2,
    'label': 'default_label',
    'learner': 'q_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.0005,
    'mac': 'basic_mac',
    'mask_before_softmax': True,
    'max_before_softmax': True,
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix',
    'obs_agent_id': True,
    'obs_individual_obs': False,
    'obs_last_action': False,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'q_nstep': 5,
    'repeat_id': 1,
    'runner': 'episode',
    'runner_log_interval': 1000,
    'save_model': False,
    'save_model_interval': 50000,
    'save_replay': False,
    'seed': 8206,
    'standardise_returns': False,
    'standardise_rewards': True,
    't_max': 20050000,
    'target_update_interval_or_tau': 200,
    'test_greedy': True,
    'test_interval': 50000,
    'test_nepisode': 100,
    'use_cuda': False,
    'use_rnn': False,
    'use_tensorboard': False}

[2022-07-15 16:33:29.680] [info] No level specified, will use the first level described in the GDY.
[INFO 16:33:29] my_main Beginning training for 1000 episodes
/Users/jonnycook/Desktop/MARLGen/epymarl/src/components/episode_buffer.py:108: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  ../torch/csrc/utils/tensor_new.cpp:201.)
  v = th.tensor(v, dtype=dtype, device=self.device)
/Users/jonnycook/Desktop/MARLGen/epymarl/src/components/episode_buffer.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
[INFO 16:33:30] my_main t_env: 42 / 20050000
[INFO 16:33:30] my_main Estimated time left: 1 minutes, 26 seconds. Time passed: 0 seconds
Episode: 100
Episode: 200
[INFO 16:33:51] my_main Recent Stats | t_env:      10021 | Episode:      205
epsilon:                   0.0500	grad_norm:                 2.6405	loss:                      0.9042	q_taken_mean:              0.0589
return_mean:              -0.0200	return_std:                0.0872	target_mean:               0.1980	td_error_abs:              0.9361
test_return_mean:          0.0000	test_return_std:           0.0000	
Episode: 300
Episode: 400
[INFO 16:34:07] my_main Recent Stats | t_env:      20021 | Episode:      405
epsilon:                   0.0500	grad_norm:                 5.7783	loss:                      0.6291	q_taken_mean:              0.4094
return_mean:              -0.0100	return_std:                0.0436	target_mean:               0.5716	td_error_abs:              0.7103
test_return_mean:          0.0000	test_return_std:           0.0000	
Episode: 500
Episode: 600
[INFO 16:34:22] my_main Recent Stats | t_env:      30021 | Episode:      605
epsilon:                   0.0500	grad_norm:                 4.5253	loss:                      0.4804	q_taken_mean:              0.5876
return_mean:              -0.0100	return_std:                0.0436	target_mean:               0.6824	td_error_abs:              0.5678
test_return_mean:          0.0000	test_return_std:           0.0000	
Episode: 700
Episode: 800
[INFO 16:34:37] my_main Recent Stats | t_env:      40021 | Episode:      805
epsilon:                   0.0500	grad_norm:                 5.0388	loss:                      0.4790	q_taken_mean:              0.7325
return_mean:               0.0000	return_std:                0.0000	target_mean:               0.7650	td_error_abs:              0.5251
test_return_mean:          0.0000	test_return_std:           0.0000	
Episode: 900
Episode: 1000
[INFO 16:34:52] my_main Finished Training
Exception ignored in: <function VideoRecorder.__del__ at 0x7fb1131460e0>
Traceback (most recent call last):
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/griddly/RenderTools.py", line 99, in __del__
    self.close()
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/griddly/RenderTools.py", line 95, in close
    self._image_encoder.close()
AttributeError: 'VideoRecorder' object has no attribute '_image_encoder'
Exiting Main
Stopping all threads
Thread MsgRouterThr is alive! Is daemon: True
Thread joined
Thread QueueFeederThread is alive! Is daemon: True
Thread joined
Thread ChkStopThr is alive! Is daemon: True
Thread joined
Thread NetStatThr is alive! Is daemon: True
Thread joined
Thread Thread-5 is alive! Is daemon: True
Thread joined
Thread Thread-6 is alive! Is daemon: True
Thread joined
Thread Thread-7 is alive! Is daemon: True
Thread joined
Thread Thread-8 is alive! Is daemon: True
Thread joined
Thread Thread-9 is alive! Is daemon: True
Thread joined
Thread Thread-10 is alive! Is daemon: True
Thread joined
Thread Thread-11 is alive! Is daemon: False
Thread joined
Exiting script
[DEBUG 16:35:03] my_main Finished after 0:01:34.
[INFO 16:35:03] pymarl Completed after 0:01:34
