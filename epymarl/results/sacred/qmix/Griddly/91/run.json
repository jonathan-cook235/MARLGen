{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/Users/jonnycook/Desktop/MARLGen/epymarl/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.21.5",
      "PyYAML==6.0",
      "sacred==0.8.2",
      "torch==1.10.2"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [],
    "sources": [
      [
        "main.py",
        "_sources/main_6f0d470295c80382a193688017432b5b.py"
      ],
      [
        "run.py",
        "_sources/run_ca1982628fbd6f56dea25d3d2b533d62.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_8309e899ab76a4e610428ba7ee8d8acb.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/sacred/stdout_capturing.py\", line 169, in tee_output_fd\n    yield out  # let the caller do their printing\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/sacred/run.py\", line 238, in __call__\n    self.result = self.main_function(*args)\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 50, in my_main\n    run(_run, config, _log)\n",
    "  File \"/Users/jonnycook/Desktop/MARLGen/epymarl/src/run.py\", line 56, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/Users/jonnycook/Desktop/MARLGen/epymarl/src/run.py\", line 214, in run_sequential\n    runner.run(test_mode=True)\n",
    "  File \"/Users/jonnycook/Desktop/MARLGen/epymarl/src/runners/episode_runner.py\", line 73, in run\n    obs, reward, terminated, env_info = self.env.step(actions[0])\n",
    "  File \"/Users/jonnycook/Desktop/MARLGen/epymarl/src/envs/game_2.py\", line 118, in step\n    self.active_agents = self.get_active_agents()\n",
    "  File \"/Users/jonnycook/Desktop/MARLGen/epymarl/src/envs/game_2.py\", line 87, in get_active_agents\n    state = super().get_state()\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/griddly/GymWrapper.py\", line 128, in get_state\n    return self.game.get_state()\n",
    "KeyboardInterrupt\n",
    "\nDuring handling of the above exception, another exception occurred:\n\n",
    "Traceback (most recent call last):\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/contextlib.py\", line 130, in __exit__\n    self.gen.throw(type, value, traceback)\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/sacred/stdout_capturing.py\", line 195, in tee_output_fd\n    out.finalize()\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/sacred/stdout_capturing.py\", line 83, in finalize\n    self.final = self.get()\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/sacred/stdout_capturing.py\", line 73, in get\n    value = self.buffer.read()\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/tempfile.py\", line 481, in func_wrapper\n    return func(*args, **kwargs)\n",
    "  File \"/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\n",
    "UnicodeDecodeError: 'utf-8' codec can't decode bytes in position 152580-152581: invalid continuation byte\n"
  ],
  "heartbeat": null,
  "host": {
    "ENV": {},
    "cpu": "Apple M1",
    "hostname": "Jonnys-MBP",
    "os": [
      "Darwin",
      "Darwin-20.5.0-x86_64-i386-64bit"
    ],
    "python_version": "3.7.11"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "start_time": "2022-07-09T17:31:26.912930",
  "status": "FAILED",
  "stop_time": "2022-07-09T17:31:37.302372"
}