
LEARNER
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg project when running a sweep.
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg entity when running a sweep.
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg project when running a sweep.
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg entity when running a sweep.
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg project when running a sweep.
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg entity when running a sweep.
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg project when running a sweep.
[34m[1mwandb[39m[22m: [33mWARNING[39m Ignored wandb.init() arg entity when running a sweep.
src/main.py:76: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  if isinstance(v, collections.Mapping):
[INFO 13:36:53] root Saving to FileStorageObserver in results/sacred.
[DEBUG 13:36:53] pymarl Using capture mode "fd"
[INFO 13:36:53] pymarl Running command 'my_main'
[INFO 13:36:53] pymarl Started run with ID "48"
[DEBUG 13:36:53] pymarl Starting Heartbeat
[DEBUG 13:36:53] my_main Started
[WARNING 13:36:53] my_main CUDA flag use_cuda was switched OFF automatically because no CUDA devices are available!
[INFO 13:36:53] my_main Experiment Parameters:
[INFO 13:36:53] my_main
{   'action_selector': 'soft_policies',
    'add_value_last_step': True,
    'agent': 'rnn',
    'agent_output_type': 'q',
    'batch_size': 10,
    'batch_size_run': 10,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_type': 'ac_critic',
    'double_q': True,
    'entropy_coef': 0.01,
    'env': 'griddlygen',
    'env_args': {   'seed': 1976},
    'epochs': 4,
    'eps_clip': 0.2,
    'epsilon_anneal_time': 5000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'evaluation_epsilon': 0.0,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hidden_dim': 64,
    'hypergroup': None,
    'hypernet_embed': 64,
    'hypernet_layers': 2,
    'label': 'default_label',
    'learner': 'q_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 50000,
    'lr': 0.0005,
    'mac': 'basic_mac',
    'mask_before_softmax': True,
    'max_before_softmax': True,
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix',
    'obs_agent_id': True,
    'obs_individual_obs': False,
    'obs_last_action': False,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'q_nstep': 5,
    'repeat_id': 1,
    'runner': 'episode',
    'runner_log_interval': 1000,
    'save_model': False,
    'save_model_interval': 50000,
    'save_replay': False,
    'seed': 1976,
    'standardise_returns': False,
    'standardise_rewards': True,
    't_max': 20050000,
    'target_update_interval_or_tau': 200,
    'test_greedy': True,
    'test_interval': 50000,
    'test_nepisode': 100,
    'use_cuda': False,
    'use_rnn': False,
    'use_tensorboard': False}
[2022-07-15 13:36:53.435] [[32minfo[39m] No level specified, will use the first level described in the GDY.
MIXER
QMixer(
  (hyper_w_1): Linear(in_features=400, out_features=36, bias=True)
  (hyper_w_final): Linear(in_features=400, out_features=18, bias=True)
  (hyper_b_1): Linear(in_features=400, out_features=18, bias=True)
  (V): Sequential(
    (0): Linear(in_features=400, out_features=18, bias=True)
    (1): ReLU()
    (2): Linear(in_features=18, out_features=1, bias=True)
  )
)
printing deepcopy input
QMixer(
  (hyper_w_1): Linear(in_features=400, out_features=36, bias=True)
  (hyper_w_final): Linear(in_features=400, out_features=18, bias=True)
  (hyper_b_1): Linear(in_features=400, out_features=18, bias=True)
  (V): Sequential(
    (0): Linear(in_features=400, out_features=18, bias=True)
    (1): ReLU()
    (2): Linear(in_features=18, out_features=1, bias=True)
  )
)
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict([('hyper_w_1', Linear(in_features=400, out_features=36, bias=True)), ('hyper_w_final', Linear(in_features=400, out_features=18, bias=True)), ('hyper_b_1', Linear(in_features=400, out_features=18, bias=True)), ('V', Sequential(
  (0): Linear(in_features=400, out_features=18, bias=True)
  (1): ReLU()
  (2): Linear(in_features=18, out_features=1, bias=True)
))])
printing deepcopy input
Linear(in_features=400, out_features=36, bias=True)
printing deepcopy input
OrderedDict([('weight', Parameter containing:
tensor([[-0.0424,  0.0430,  0.0101,  ...,  0.0062, -0.0333, -0.0445],
        [-0.0328, -0.0110, -0.0176,  ...,  0.0014, -0.0308, -0.0492],
        [ 0.0154, -0.0339, -0.0246,  ..., -0.0486, -0.0276,  0.0181],
        ...,
        [ 0.0160, -0.0119,  0.0029,  ..., -0.0345, -0.0264, -0.0033],
        [ 0.0197, -0.0110,  0.0491,  ..., -0.0117,  0.0066,  0.0360],
        [ 0.0392,  0.0323, -0.0386,  ...,  0.0209,  0.0403,  0.0113]],
       requires_grad=True)), ('bias', Parameter containing:
tensor([-4.7991e-02, -3.1047e-02, -1.5803e-02, -1.4943e-02,  4.9386e-02,
         2.0400e-03,  2.4265e-02,  5.6361e-03, -2.1687e-02, -1.7482e-02,
         3.1111e-03,  6.7855e-03,  4.3990e-02, -3.7996e-03, -2.9124e-02,
        -7.5620e-03,  4.6426e-02,  2.8529e-02,  1.2273e-02, -3.8330e-03,
        -2.5767e-02, -3.3808e-02, -4.6214e-02,  6.2331e-03, -2.8026e-02,
         2.0914e-02,  3.3176e-02,  3.8111e-02, -1.6244e-02,  3.8110e-05,
         1.1300e-03, -1.9998e-02, -1.1647e-02,  1.0218e-02,  2.2135e-02,
         1.8137e-02], requires_grad=True))])
printing deepcopy input
Parameter containing:
tensor([[-0.0424,  0.0430,  0.0101,  ...,  0.0062, -0.0333, -0.0445],
        [-0.0328, -0.0110, -0.0176,  ...,  0.0014, -0.0308, -0.0492],
        [ 0.0154, -0.0339, -0.0246,  ..., -0.0486, -0.0276,  0.0181],
        ...,
        [ 0.0160, -0.0119,  0.0029,  ..., -0.0345, -0.0264, -0.0033],
        [ 0.0197, -0.0110,  0.0491,  ..., -0.0117,  0.0066,  0.0360],
        [ 0.0392,  0.0323, -0.0386,  ...,  0.0209,  0.0403,  0.0113]],
       requires_grad=True)
printing deepcopy input
Parameter containing:
tensor([-4.7991e-02, -3.1047e-02, -1.5803e-02, -1.4943e-02,  4.9386e-02,
         2.0400e-03,  2.4265e-02,  5.6361e-03, -2.1687e-02, -1.7482e-02,
         3.1111e-03,  6.7855e-03,  4.3990e-02, -3.7996e-03, -2.9124e-02,
        -7.5620e-03,  4.6426e-02,  2.8529e-02,  1.2273e-02, -3.8330e-03,
        -2.5767e-02, -3.3808e-02, -4.6214e-02,  6.2331e-03, -2.8026e-02,
         2.0914e-02,  3.3176e-02,  3.8111e-02, -1.6244e-02,  3.8110e-05,
         1.1300e-03, -1.9998e-02, -1.1647e-02,  1.0218e-02,  2.2135e-02,
         1.8137e-02], requires_grad=True)
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
Linear(in_features=400, out_features=18, bias=True)
printing deepcopy input
OrderedDict([('weight', Parameter containing:
tensor([[ 0.0267,  0.0435,  0.0359,  ...,  0.0347, -0.0405,  0.0110],
        [-0.0316, -0.0047,  0.0190,  ..., -0.0087,  0.0180,  0.0097],
        [ 0.0491,  0.0409, -0.0189,  ..., -0.0288, -0.0425,  0.0119],
        ...,
        [ 0.0423,  0.0298, -0.0296,  ...,  0.0186,  0.0029, -0.0006],
        [ 0.0090, -0.0482, -0.0452,  ..., -0.0274,  0.0002,  0.0331],
        [-0.0226,  0.0120,  0.0090,  ..., -0.0032, -0.0013,  0.0133]],
       requires_grad=True)), ('bias', Parameter containing:
tensor([-0.0164, -0.0221,  0.0318,  0.0483,  0.0219, -0.0402,  0.0139,  0.0029,
         0.0171, -0.0175,  0.0110, -0.0462,  0.0459, -0.0404,  0.0252, -0.0265,
         0.0128, -0.0411], requires_grad=True))])
printing deepcopy input
Parameter containing:
tensor([[ 0.0267,  0.0435,  0.0359,  ...,  0.0347, -0.0405,  0.0110],
        [-0.0316, -0.0047,  0.0190,  ..., -0.0087,  0.0180,  0.0097],
        [ 0.0491,  0.0409, -0.0189,  ..., -0.0288, -0.0425,  0.0119],
        ...,
        [ 0.0423,  0.0298, -0.0296,  ...,  0.0186,  0.0029, -0.0006],
        [ 0.0090, -0.0482, -0.0452,  ..., -0.0274,  0.0002,  0.0331],
        [-0.0226,  0.0120,  0.0090,  ..., -0.0032, -0.0013,  0.0133]],
       requires_grad=True)
printing deepcopy input
Parameter containing:
tensor([-0.0164, -0.0221,  0.0318,  0.0483,  0.0219, -0.0402,  0.0139,  0.0029,
         0.0171, -0.0175,  0.0110, -0.0462,  0.0459, -0.0404,  0.0252, -0.0265,
         0.0128, -0.0411], requires_grad=True)
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
Linear(in_features=400, out_features=18, bias=True)
printing deepcopy input
OrderedDict([('weight', Parameter containing:
tensor([[ 0.0265, -0.0096, -0.0248,  ...,  0.0467,  0.0101, -0.0094],
        [ 0.0079, -0.0357, -0.0307,  ...,  0.0173, -0.0057, -0.0465],
        [-0.0314, -0.0145, -0.0427,  ..., -0.0278,  0.0490, -0.0126],
        ...,
        [-0.0219, -0.0283, -0.0106,  ..., -0.0193,  0.0082, -0.0097],
        [ 0.0122, -0.0391,  0.0442,  ...,  0.0479,  0.0062, -0.0054],
        [-0.0346, -0.0312,  0.0368,  ..., -0.0460, -0.0063,  0.0036]],
       requires_grad=True)), ('bias', Parameter containing:
tensor([-0.0267, -0.0183, -0.0250,  0.0333, -0.0125, -0.0183, -0.0217,  0.0362,
         0.0223,  0.0266, -0.0438,  0.0344, -0.0308, -0.0296,  0.0187,  0.0357,
        -0.0163,  0.0388], requires_grad=True))])
printing deepcopy input
Parameter containing:
tensor([[ 0.0265, -0.0096, -0.0248,  ...,  0.0467,  0.0101, -0.0094],
        [ 0.0079, -0.0357, -0.0307,  ...,  0.0173, -0.0057, -0.0465],
        [-0.0314, -0.0145, -0.0427,  ..., -0.0278,  0.0490, -0.0126],
        ...,
        [-0.0219, -0.0283, -0.0106,  ..., -0.0193,  0.0082, -0.0097],
        [ 0.0122, -0.0391,  0.0442,  ...,  0.0479,  0.0062, -0.0054],
        [-0.0346, -0.0312,  0.0368,  ..., -0.0460, -0.0063,  0.0036]],
       requires_grad=True)
printing deepcopy input
Parameter containing:
tensor([-0.0267, -0.0183, -0.0250,  0.0333, -0.0125, -0.0183, -0.0217,  0.0362,
         0.0223,  0.0266, -0.0438,  0.0344, -0.0308, -0.0296,  0.0187,  0.0357,
        -0.0163,  0.0388], requires_grad=True)
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
Sequential(
  (0): Linear(in_features=400, out_features=18, bias=True)
  (1): ReLU()
  (2): Linear(in_features=18, out_features=1, bias=True)
)
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict([('0', Linear(in_features=400, out_features=18, bias=True)), ('1', ReLU()), ('2', Linear(in_features=18, out_features=1, bias=True))])
printing deepcopy input
Linear(in_features=400, out_features=18, bias=True)
printing deepcopy input
OrderedDict([('weight', Parameter containing:
tensor([[-0.0022,  0.0379,  0.0061,  ...,  0.0223, -0.0313, -0.0178],
        [ 0.0428,  0.0297,  0.0003,  ..., -0.0081,  0.0088,  0.0029],
        [ 0.0228,  0.0191, -0.0417,  ..., -0.0106, -0.0175, -0.0299],
        ...,
        [-0.0129,  0.0008, -0.0392,  ..., -0.0019, -0.0353,  0.0063],
        [ 0.0125,  0.0311,  0.0214,  ..., -0.0207,  0.0220,  0.0292],
        [ 0.0320,  0.0037,  0.0415,  ...,  0.0164, -0.0433, -0.0313]],
       requires_grad=True)), ('bias', Parameter containing:
tensor([ 0.0068,  0.0463,  0.0494, -0.0054,  0.0331,  0.0321, -0.0037, -0.0209,
        -0.0027, -0.0350, -0.0437,  0.0464, -0.0091,  0.0347, -0.0319,  0.0348,
         0.0004, -0.0236], requires_grad=True))])
printing deepcopy input
Parameter containing:
tensor([[-0.0022,  0.0379,  0.0061,  ...,  0.0223, -0.0313, -0.0178],
        [ 0.0428,  0.0297,  0.0003,  ..., -0.0081,  0.0088,  0.0029],
        [ 0.0228,  0.0191, -0.0417,  ..., -0.0106, -0.0175, -0.0299],
        ...,
        [-0.0129,  0.0008, -0.0392,  ..., -0.0019, -0.0353,  0.0063],
        [ 0.0125,  0.0311,  0.0214,  ..., -0.0207,  0.0220,  0.0292],
        [ 0.0320,  0.0037,  0.0415,  ...,  0.0164, -0.0433, -0.0313]],
       requires_grad=True)
printing deepcopy input
Parameter containing:
tensor([ 0.0068,  0.0463,  0.0494, -0.0054,  0.0331,  0.0321, -0.0037, -0.0209,
        -0.0027, -0.0350, -0.0437,  0.0464, -0.0091,  0.0347, -0.0319,  0.0348,
         0.0004, -0.0236], requires_grad=True)
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
ReLU()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
Linear(in_features=18, out_features=1, bias=True)
printing deepcopy input
OrderedDict([('weight', Parameter containing:
tensor([[-0.2021, -0.1376,  0.2135, -0.1560, -0.0220, -0.1170, -0.1042, -0.0776,
         -0.2083,  0.1387, -0.1061,  0.1229,  0.1473, -0.1205, -0.2214, -0.1355,
         -0.1665,  0.1061]], requires_grad=True)), ('bias', Parameter containing:
tensor([-0.0723], requires_grad=True))])
printing deepcopy input
Parameter containing:
tensor([[-0.2021, -0.1376,  0.2135, -0.1560, -0.0220, -0.1170, -0.1042, -0.0776,
         -0.2083,  0.1387, -0.1061,  0.1229,  0.1473, -0.1205, -0.2214, -0.1355,
         -0.1665,  0.1061]], requires_grad=True)
printing deepcopy input
Parameter containing:
tensor([-0.0723], requires_grad=True)
printing deepcopy input
OrderedDict()
printing deepcopy input
set()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
OrderedDict()
printing deepcopy input
{'epsilon_finish': 0.047166133532423014, 'hypernet_embed': 24, 'hypernet_layers': 1, 'lr': 0.0004612643106347401, 'mixing_embed_dim': 18}
[DEBUG 13:36:53] pymarl Stopping Heartbeat
[ERROR 13:36:53] pymarl Failed after 0:00:00!
Traceback (most recent calls WITHOUT Sacred internals):
  File "src/main.py", line 54, in my_main
    run(_run, config, _log)
  File "/Users/jonnycook/Desktop/MARLGen/epymarl/src/run.py", line 57, in run
    run_sequential(args=args, logger=logger)
  File "/Users/jonnycook/Desktop/MARLGen/epymarl/src/run.py", line 126, in run_sequential
    learner = le_REGISTRY[args.learner](mac, buffer.scheme, logger, args)
  File "/Users/jonnycook/Desktop/MARLGen/epymarl/src/learners/q_learner.py", line 38, in __init__
    self.target_mixer = copy.deepcopy(self.mixer)
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/copy.py", line 182, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/copy.py", line 283, in _reconstruct
    state = deepcopy(state, memo)
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/copy.py", line 150, in deepcopy
    y = copier(x, memo)
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/copy.py", line 161, in deepcopy
    copier = getattr(x, "__deepcopy__", None)
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/wandb/sdk/wandb_config.py", line 160, in __getattr__
    return self.__getitem__(key)
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/wandb/sdk/wandb_config.py", line 128, in __getitem__
    return self._items[key]
KeyError: '__deepcopy__'
Exception ignored in: <function VideoRecorder.__del__ at 0x7fc51332f320>
Traceback (most recent call last):
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/griddly/RenderTools.py", line 99, in __del__
    self.close()
  File "/Users/jonnycook/opt/anaconda3/envs/MARLGen/lib/python3.7/site-packages/griddly/RenderTools.py", line 95, in close
    self._image_encoder.close()
AttributeError: 'VideoRecorder' object has no attribute '_image_encoder'